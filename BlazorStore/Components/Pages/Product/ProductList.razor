@page "/product"
@attribute [StreamRendering]

@inject IUnitOfWork _uow
@inject NavigationManager _nm

<div class="row mt-4">
    <DataGrid />
</div>

@code {
    // Alternative method to check if user is Authtenticated
    [CascadingParameter]
    public Task<AuthenticationState>? authenticationState { get; set; }

    protected override async Task OnInitializedAsync()
    {
        // Alternative method to check if user is Authtenticated
        var authState = authenticationState is not null ? await authenticationState : null;
        var user = authState?.User;

        if (user?.Identity is null || !user.Identity.IsAuthenticated)
        {
            _nm.NavigateTo($"/Account/Login?returnUrl={Uri.EscapeDataString((new Uri(_nm.Uri)).LocalPath)}", forceLoad: true);
        }

        if (!user.IsInRole(SD.Role_Admin))
        {
            _nm.NavigateTo($"/Account/AccessDenied?returnUrl={Uri.EscapeDataString((new Uri(_nm.Uri)).LocalPath)}", forceLoad:
            true);
        }
    }
}